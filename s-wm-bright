#!/usr/bin/env ruby
#
# Bin is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Bin is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Bin. If not, see <https://www.gnu.org/licenses/>.
#

# frozen_string_literal: true

require 'optparse'

# Manage System backlight.
class Backlight
  attr_reader :state, :brighters

  def initialize(state, brighters = Brighters.new.all)
    @state = state
    @brighters = brighters
  end

  def brighter
    brighters.first
  end

  def action(act)
    case act
    when :up
      brighter.up
    when :down
      brighter.down
    end
  end

  def final_command
    "#{brighter.bin} #{action(state)}"
  end

  def run
    system final_command
  end
end

# all available backlight managers
class Brighters
  STEP = 5
  Brighter = Struct.new(:bin, :up, :down)

  def brightnessctl
    Brighter.new 'brightnessctl', "set #{STEP}%+", "set #{STEP}%-"
  end

  def all
    [brightnessctl]
  end
end

options = {}
oparser = OptionParser.new do |parser|
  parser.banner = 'Usage: dots [options]'

  parser.on('-u', '--up', String, 'turn backlight up') do
    options[:up] = :up
  end

  parser.on('-d', '--down', String, 'turn backlight down') do
    options[:down] = :down
  end

  parser.on('-i', '--info', 'general information of internals backlight') do
    options[:info] = true
  end
end

oparser.parse! ['--help'] if ARGV.empty?
oparser.parse!

# RUN
Backlight.new(options.values.first).run
