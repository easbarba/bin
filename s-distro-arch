#!/usr/bin/env bash

# DEBUG OPTIONS
set -euo pipefail

DEPS=(sudo apt wget systemctl timedatectl fc-cache firewalld)
s-checkdeps "${DEPS[@]}"

REMOVE='sudo apt remove -y'
PURGE='sudo apt purge -y'
INSTALL='sudo pacman -S --noconfirm'

#s-echo "Welcome to Arch '$(cat /etc/debian_version)'"

# =================================

s-echo "Pre Install"
s-echo "Enable Multi-Arch"
#sudo dpkg --add-architecture i386

# =================================
s-echo "Upgrading System"
#sudo pacman -Syy

# =================================

s-echo "System Packages"

arch=()

gnu=(bash gcc make wget screen parallel gawk parted) # info recutils

system=(git openssh unzip zip p7zip at usbutils lsof atool time entr tree bc curl
	strace ltrace cpio lhasa lzop rsync pv texinfo autoconf automake socat tmux)

shell=(bash-completion shellcheck fish)

fonts=(ttf-hack ttf-dejavu ttf-jetbrains-mono adobe-source-han-sans-otc-fonts
	noto-fonts noto-fonts-emoji ttf-liberation ttf-droid adobe-source-sans-fonts)

laptop=(acpi lm-sensors lshw libinput-tools)

wayland=(sway swaybg swaylock swayidle foot grim slurp wl-clipboard xorg-xwayland mako) #clipman

xorg=(xorg xorg-server xclip xsel feh scrot network-manager-applet xautolock)

wm=(udiskie brightnessctl bluez blueman mpd mpc ncmpcpp playerctl slock dmenu
	awesome zathura-cb zathura-pdf-mupdf zathura-djvu zathura-ps perl-file-mimeinfo)

laptop=(acpid lm_sensors) #tlp vainfo i965-va-driver libvdpau-va-gl1 libiw-dev hddtemp acpi-call dialog sysstat)

gtk=(atril cheese)

kde=(ktorrent kdenlive kate falkon kdeconnect krita kdevelop)

cli=(htop ffmpeg mpv elinks libnotify ranger aria2)

user=(chromium firefox libreoffice gimp xdg-utils imagemagick aspell aspell-pt
	calibre pandoc obs-studio inkscape)

sound=(pipewire pipewire-pulse lib32-pipewire pipewire-docs) # wireplumber pulseaudio-utils

media=(gstreamer gst-libav gst-plugins-bad gst-plugins-base gst-plugins-good gst-plugins-ugly)

amd=(amd-ucode mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon)

groups=("${arch[@]}"
	"${gnu[@]}"
	"${system[@]}"
	"${shell[@]}"
	"${wayland[@]}"
	"${xorg[@]}"
	"${sound[@]}"
	"${user[@]}"
	"${wm[@]}"
	"${kde[@]}"
	"${gtk[@]}"
	"${cli[@]}"
	"${laptop[@]}"
	"${amd[@]}"
	"${media[@]}"
	"${fonts[@]}")

for group in "${groups[@]}"; do
	s-dolist "$INSTALL" "$group"
done

# =================================
s-echo "Post Install"
#sudo apt -y build-dep emacs
#sudo apt-file update # update Debian database

# =================================
s-echo "Clean up"
#UNUSED=(firefox-esr)
#s-dolist "$REMOVE" "${UNUSED[@]}"

#TOPURGE=(*nvidia*)
#s-dolist "$PURGE" "${TOPURGE[@]}"

s-echo "Distro Services"
sudo systemctl enable fstrim.timer

# =================================
s-echo "Foreign packages"

if [[ ! -x $(command -v flatpak) ]]; then
	"$INSTALL" flatpak
	sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
fi

#if [[ -x $(command -v google-chrome) ]]; then
#	wget -P "/tmp" https://dl.google.com/linux/direct/google-chrome-stable-current_amd64.deb
#	"$INSTALL" /tmp/google-chrome-stable-current_amd64.deb
#fi

if [[ ! -x $(command -v code) ]]; then
	wget -c "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -O '/tmp/vscode-x64.deb'
	"$INSTALL" /tmp/vscode-x64.deb
fi

exit
